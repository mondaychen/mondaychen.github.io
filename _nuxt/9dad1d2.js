(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{299:function(n,e){n.exports={attributes:{subject:"禅与静态个人站开发技术",time:1560236205e3,location:"New York"},html:'<p>本来的标题是“分享一下用 Nuxt.js 快速重写了积灰多年的个人网站的经历顺便回顾下最近的生活”。现在的标题好像有点误导人：《禅与摩托车维修艺术》没有讲摩托车维修，这篇文章却真的打算讲静态站开发……</p>\n<p>成品在 <a href="https://mondaychen.github.io/">https://mondaychen.github.io/</a>。代码在 <a href="https://github.com/mondaychen/mondaychen.github.io/tree/v2">https://github.com/mondaychen/mondaychen.github.io/tree/v2</a></p>\n<hr>\n<p>之前看到一个推特黑工程师写博客之前要用一大堆最新最火爆的前端库和工具链先做一个个人网站，最后网站倒是写的不错，三年却只写了一篇博客……嘛，不能免俗的我也忍不住把自己 2016 年写的老个人站翻出来重写了一遍。原先的网站是一套非常原始的 require.js + jQuery + backbone 的结构，用 gulp 管理依赖。这几样当年很火的东西，最近两年入行的前端工程师可能只听过一个 jQuery 吧。</p>\n<p>这次重写没有动样式，把 UI 库换成了 vue.js，原先的 hash SPA 模式换成了生成静态页面。博客数据仍然是用 Markdown + JSON 维护。</p>\n<h2>create-nuxt-app 介绍</h2>\n<p>重写网站用的是 Vue.js 的快速开发框架 Nuxt.js（与 React.js 社区的 Next.js 核心功能基本一致）。它的命令行工具 create-nuxt-app 可以帮我们快速配置一个如下技术栈的项目：</p>\n<ul>\n<li>Vue.js</li>\n<li>Vue Router (with advanced layout system and Asynchronous Data fetching)</li>\n<li>Webpack (with hot reload)</li>\n<li>Pre-processor: (Vue file, ES2015, scss/less/stylus)</li>\n<li>一个可选的 backend server，如 express，对我们来说因为要生成静态站点，所以不重要，默认就好</li>\n<li>可选的 UI framework，我在这里没有选，而是通过 plugin 引入了 vue-material，下文会提到</li>\n</ul>\n<p>此外它还提供了一些别的组件，比如可选的测试框架和代码样式工具。对于我们这种小型项目来说测试不必要，但是统一代码样式还是个好习惯，推荐勾上 ESLint + Prettier。</p>\n<p>create-nuxt-app 的具体文档在 <a href="https://v2.nuxt.com/docs/get-started/installation/">这里</a>。</p>\n<h2>路由</h2>\n<p>Nuxt 路由的文档在 <a href="https://zh.nuxtjs.org/guide/routing/">这里</a>。它提供的路由配置简单好懂，且基本上覆盖了大多数需求，只要在 pages 目录建符合约定的文件即可。作为参考，我的站点的路由有这几种：</p>\n<ul>\n<li>/ （主页）</li>\n<li>/blog/en/ （英文博客列表页）</li>\n<li>/blog/en/[title] （英文博客详情页）</li>\n<li>/blog/cn/ （中文博客列表页）</li>\n<li>/blog/cn/[title] （中文博客详情页）</li>\n</ul>\n<p>我的 pages 目录如下：</p>\n<pre><code>.\n├── blog\n│   └── _lang\n│       ├── _article.vue\n│       └── index.vue\n└── index.vue\n</code></pre>\n<p>其中 <code>blog/_lang/index.vue</code> 里面用 <code>validate</code> 保证它只能是 cn 或者 en。</p>\n<h2>Markdown</h2>\n<h3>Webpack loader</h3>\n<p>我的博客文章都是用 markdown 格式的文件存储的。Nuxt 本身并没有支持 md 格式，所以需要为 webpack 加入对应的支持。</p>\n<p>我自己用的是一个叫 frontmatter-markdown-loader 的 webpack 插件。这个插件不但可以把 markdown 转换为 html，还能帮你提取里面的元数据 (attributes)，这样一来你就可以把一些自定义的数据也写在 markdown 里，比如发布日期等。</p>\n<p>在 Nuxt 中启用新的 webpack loader 是通过在 nuxt.config.js 文件里面的 extend 里扩展 webpack config 完成的。</p>\n<pre><code class="language-js">extend(config, ctx) {\n  // add markdown loader\n  config.module.rules.push({\n    test: /\\.md$/,\n    loader:  \'frontmatter-markdown-loader\'\n  })\n}\n</code></pre>\n<h3>使用 asyncData 在页面中动态读取 Markdown</h3>\n<p>准备好了 webpack，我们还需要在页面中读取这些文件，并把 html 渲染到页面里。Nuxt 在页面组件层面提供的 asyncData 方法是很合适的入口，因为 import 是一个异步操作。对应的文档在 https://zh.nuxtjs.org/guide/async-data/。</p>\n<p>asyncData 支持 async/await，也支持 Promise 作为返回值。在 文章页面 和 列表页面 中，你能分别看到两种用法的例子。</p>\n<p>出于管理上简单的考虑，我用一个 JSON 文件 来列出所有的博客文章的文件和在 URL 中对应的地址，而不是扫描目录。</p>\n<h3>代码高亮</h3>\n<p>我是使用 Prismjs 来做代码高亮的。这里用到了 Nuxt 的 plugin 功能来做 inject。</p>\n<p>新增的 Plugin 文件需要在 nuxt.config.js 里面的 plugins 加上它的路径。参考文档。</p>\n<p>我的 Prism.js plugin 在<a href="https://github.com/mondaychen/mondaychen.github.io/blob/v2/plugins/prism.js">这个文件</a>。使用 <code>Vue.prototype.$Prism = Prism</code> 就可以在 Vue instance 上面注册这个变量了。</p>\n<p>最后在 _article.vue 里面加入如下语句就可以为我们页面里的代码加入自动高亮了。</p>\n<pre><code class="language-js">mounted()  {\n  this.$Prism.highlightAll()\n}\n</code></pre>\n<h2>提取 CSS 文件和代码切分</h2>\n<p>如果你像我一样喜欢用 JS 里的 <code>import \'./xxx.css\'</code> 而不是页面 head 里的 <link>来引入第三方 css 文件，或者你在 vue 文件里写较多的样式，你可能需要考虑在 <code>nuxt.config.js</code> 文件里把 extractCSS 设为 true，让 Nuxt 帮你把这些 css 抽取到文件中，而不是写进 html 里面。</p>\n<p>如果你打开这个选项的话，我建议把 <code>splitChunks</code> 里面的 <code>pages</code> 设为 <code>false</code>，来避免由于过多拆分 css 文件导致的样式渲染延迟问题。</p>\n<h2>生成静态页</h2>\n<p>做完本地开发之后，终于可以上线啦。我的网站在 github pages 上，当然静态站部署到哪里都很方便。</p>\n<h3>配置目标路由</h3>\n<p>生成静态页的命令是 Nuxt 自带的，只需要在项目根目录执行 npm run generate 即可。但是在此之前我们需要告诉 Nuxt 有哪些目标路由需要生成。我的 nuxt.config.js 中的配置如下：</p>\n<pre><code class="language-js">generate: {\n  routes: [\n    \'/blog/cn\',\n    \'/blog/en\',\n    ...blogs.cn.map((blog) =&gt; `/blog/cn/${blog.url}`),\n    ...blogs.en.map((blog) =&gt; `/blog/en/${blog.url}`),\n  ]\n}\n</code></pre>\n<p>其中 blogs 是我之前提到的 JSON 格式的博客列表 。</p>\n<p>部署到 github pages\n官方文档对此有非常详细的说明，我就不赘述了。 <a href="https://v2.nuxt.com/deployments/github-pages#deploy-nuxt-on-github-pages">https://v2.nuxt.com/deployments/github-pages#deploy-nuxt-on-github-pages</a></p>\n<h3>碎碎念时间</h3>\n<p>我在元旦的时候立了个 flag 说要多写文章，结果快过去半年了，这是动笔写的第一篇文章（而且还是入门向的）。但工作生活上还算是有些进展：家里添了一个可爱的小宝宝，换了令人满意的新工作，尝试了一些新技术，读了一些好书，听了一些好播客，在股市里赚了一些钱又赔了一些。工作和技术那部分打算之后写文章展开讲讲，希望这次不要拖那么久了。</p>\n'}}}]);